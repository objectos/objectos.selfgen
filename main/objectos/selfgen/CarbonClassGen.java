/*
 * Copyright (C) 2015-2024 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package objectos.selfgen;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import objectos.selfgen.CarbonSelfGen.CarbonElement;

final class CarbonClassGen extends CarbonTemplate {

  public CarbonClassGen(CarbonSpec spec) {
    super(spec);
  }

  @Override
  final String contents() {
    className("Carbon");

    return code."""
    /*
     * Copyright (C) \{COPYRIGHT_YEARS} Objectos Software LTDA.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    package \{packageName};
    \{importList}
    /**
     * The <strong>Objectos Carbon UI</strong> main class.
     *
     * <p>
     * Objectos Carbon UI is an implementation of the Carbon Design System in pure
     * Java.
     */
    public final class \{simpleName} {

      //
      // The code below was generated by objectos.selfgen.CarbonMain.
      //
      // DO NOT EDIT!
      //

    \{elements()}
    }
    """;
  }

  private String elements() {
    return code."""
      // elements

      sealed static abstract class Element1<T1> implements Html.FragmentLambda {
        final Html.FragmentLambda1<T1> fragment;
        final T1 data;

        Element1(Html.FragmentLambda1<T1> fragment, T1 data) {
          this.fragment = fragment;
          this.data = data;
        }

        @Override
        public final void invoke() throws Exception {
          fragment.invoke(data);
        }
      }

    \{elementTypes()}""";
  }

  private String elementTypes() {
    List<String> types;
    types = new ArrayList<>();

    for (CarbonElement element : spec.elements()) {
      String dataName;
      dataName = element.dataName();

      types.add(
          code."""
            /**
             * The \{element.description}.
             */
            public static final class \{element.name} extends Element1<\{dataName}> {
              /**
               * An \{element.description} component.
               */
              public sealed interface Component extends Carbon.Component {}

              Header(Html.FragmentLambda1<\{dataName}> fragment, \{dataName} data) {
                super(fragment, data);
              }
            }
          """
      );
    }

    return types.stream().collect(Collectors.joining("\n"));
  }

}